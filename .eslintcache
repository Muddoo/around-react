[{"C:\\Users\\zoddo\\around-react\\src\\index.js":"1","C:\\Users\\zoddo\\around-react\\src\\reportWebVitals.js":"2","C:\\Users\\zoddo\\around-react\\src\\components\\App.js":"3","C:\\Users\\zoddo\\around-react\\src\\components\\Main.js":"4","C:\\Users\\zoddo\\around-react\\src\\components\\Header.js":"5","C:\\Users\\zoddo\\around-react\\src\\components\\Footer.js":"6","C:\\Users\\zoddo\\around-react\\src\\components\\ImagePopup.js":"7","C:\\Users\\zoddo\\around-react\\src\\components\\PopupWithForm.js":"8","C:\\Users\\zoddo\\around-react\\src\\contexts\\CurrentUserContext.js":"9","C:\\Users\\zoddo\\around-react\\src\\utils\\api.js":"10","C:\\Users\\zoddo\\around-react\\src\\components\\Card.js":"11","C:\\Users\\zoddo\\around-react\\src\\components\\Input.js":"12"},{"size":511,"mtime":1612416095873,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1612416095875,"results":"15","hashOfConfig":"14"},{"size":6160,"mtime":1612416095854,"results":"16","hashOfConfig":"14"},{"size":1929,"mtime":1612416095861,"results":"17","hashOfConfig":"14"},{"size":205,"mtime":1612416095857,"results":"18","hashOfConfig":"14"},{"size":186,"mtime":1612416095856,"results":"19","hashOfConfig":"14"},{"size":742,"mtime":1612416095859,"results":"20","hashOfConfig":"14"},{"size":2944,"mtime":1612416095862,"results":"21","hashOfConfig":"14"},{"size":68,"mtime":1612416095864,"results":"22","hashOfConfig":"14"},{"size":1270,"mtime":1612416095878,"results":"23","hashOfConfig":"14"},{"size":1451,"mtime":1612416095855,"results":"24","hashOfConfig":"14"},{"size":581,"mtime":1612416095860,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1j5csnj",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\zoddo\\around-react\\src\\index.js",[],["55","56"],"C:\\Users\\zoddo\\around-react\\src\\reportWebVitals.js",[],"C:\\Users\\zoddo\\around-react\\src\\components\\App.js",[],"C:\\Users\\zoddo\\around-react\\src\\components\\Main.js",["57"],"import {useState,useContext} from 'react'\nimport Card from './Card'\nimport CurrentUserContext from '../contexts/CurrentUserContext'\n\nfunction Main(props) {\n    const {cards,onEditAvatar,onEditProfile,onAddPlace,onCardClick,onCardDelete,onCardLike} = props;\n\n    const user = useContext(CurrentUserContext)\n    const [isLoaded,setIsLoaded] = useState(false)\n    const isReady =  user && isLoaded && true;\n\n    return (\n        <main>\n            <section className={`profile ${isReady || 'hidden'}`} >\n                <div className=\"profile__wrapper\" onClick={onEditAvatar}>\n                    <img \n                        src={user?.avatar} \n                        draggable=\"false\"  \n                        alt=\"profile image\" \n                        className=\"profile__image\" \n                        onLoad={() => setIsLoaded(true)}\n                    />\n                </div>\n                <div className=\"profile__info\">\n                    <h1 className=\"profile__name\">{user?.name}</h1>\n                    <p className=\"profile__text\">{user?.about}</p>\n                    <button \n                        className=\"profile__edit-button\" \n                        aria-label=\"edit-button\" \n                        type=\"button\" \n                        onClick={onEditProfile}\n                    />\n                </div>\n                <button className=\"profile__add-button\" aria-label=\"close-button\" type=\"button\" onClick={onAddPlace} />\n            </section>\n            <section className='cards'>\n                {cards.map(card => ( \n                    <Card \n                        key={card._id} \n                        card={card} \n                        onCardClick={onCardClick} \n                        onCardDelete={onCardDelete} \n                        onCardLike={onCardLike}\n                    />\n                ))}\n            </section>\n        </main>\n    )\n}\n\nexport default Main","C:\\Users\\zoddo\\around-react\\src\\components\\Header.js",[],"C:\\Users\\zoddo\\around-react\\src\\components\\Footer.js",[],"C:\\Users\\zoddo\\around-react\\src\\components\\ImagePopup.js",["58"],"function ImagePopup(props) {\n    const {isOpen, card, onClose, onClick} = props;\n\n    return (\n        <figure className={`popup popup_figure ${isOpen ? 'visible' : null}`} onClick={onClose}>\n            <div className=\"popup__container\">\n                <img \n                    src={card && card.link} \n                    draggable=\"false\" \n                    alt=\"popup image\" \n                    className=\"popup__image\" \n                    onClick={onClick}\n                />\n                <p className=\"popup__caption\">{card.name}</p>\n                <button className=\"popup__close popup__close_fig\" aria-label=\"close-button\" type=\"button\" title=\"close\"/>\n            </div>\n        </figure>\n    )\n}\n\nexport default ImagePopup","C:\\Users\\zoddo\\around-react\\src\\components\\PopupWithForm.js",["59"],"import {useState, useEffect, useContext, useRef} from 'react'\nimport Input from './Input'\nimport CurrentUserContext from '../contexts/CurrentUserContext'\n\nfunction PopupWithForm(props) {\n    const {name,title,isOpen,onClose,submitText,inputs,submit} = props;\n\n    const user = useContext(CurrentUserContext);\n\n    const [field,setField] = useState();\n    const [error,setError] = useState();\n\n    const activeButton = useRef();\n\n    useEffect(() => {\n      if(isOpen) {\n        activeButton.current.focus()\n      }\n      if(isOpen && name === 'profile-info') {\n        const newField = {};\n        const newError = {};\n        inputs.forEach(([,,name]) => {\n          newField[name] = user[name];\n          newError[name] = '';\n        });\n        setField(newField);\n        setError(newError);\n      }\n      else if(isOpen && inputs) {\n        const newField = {};\n        const newError = {};\n        inputs.forEach(([,,name]) => {\n          newField[name] = '';\n          newError[name] = '';\n        });\n        setField(newField);\n        setError(newError);\n      }\n    },[isOpen,user]);\n\n    function handleChange(e) {\n      setField({...field, [e.target.name]: e.target.value.trim() && e.target.value});\n      setError({...error, [e.target.name]: e.target.validationMessage})\n    }\n\n    function setButtonState() {\n      if(!field) return false\n      const isField = Object.values(field).every(field => field !== '');\n      const isError = Object.values(error).some(error => error !== '');\n      return isError || !isField\n    }\n\n    function handleSubmit(e) {\n      e.preventDefault();\n      e.target.textContent = 'Saving...';\n      submit(name, field);\n    }\n    return (\n      <div \n        className={`popup popup_${name} ${isOpen && 'visible'}`} \n        onClick={onClose}\n      >\n          <form action=\"#\" className=\"popup__form\" name={name} noValidate>\n              <button className=\"popup__close\" aria-label=\"close-button\" type=\"button\"></button>\n              <h3 className=\"popup__header\">{title}</h3>\n              {inputs && inputs.map(([type,placeholder,name,min,max],i) => (\n                <Input \n                  key={i} \n                  type={type} \n                  placeholder={placeholder} \n                  name={name}\n                  min={min}\n                  max={max}\n                  value={field?.[name] || ''}\n                  error={error?.[name]}\n                  onChange={handleChange}\n                />\n              ))}\n              <button \n                  type=\"submit\" \n                  className={`popup__submit active ${setButtonState() && 'inactive'}`} \n                  aria-label=\"submit-button\"\n                  onClick={handleSubmit}\n                  ref={activeButton}\n                  disabled={setButtonState()}\n              >\n                    {isOpen && submitText}\n              </button>\n          </form>\n      </div>\n    )\n}\n\nexport default PopupWithForm","C:\\Users\\zoddo\\around-react\\src\\contexts\\CurrentUserContext.js",[],"C:\\Users\\zoddo\\around-react\\src\\utils\\api.js",[],"C:\\Users\\zoddo\\around-react\\src\\components\\Card.js",["60"],"import {useContext} from 'react'\nimport CurrentUserContext from '../contexts/CurrentUserContext'\nfunction Card(props) {\n    const {card,onCardClick,onCardDelete,onCardLike} = props;\n\n\n    const user = useContext(CurrentUserContext);\n\n    const isOwner = user._id === card.owner._id;\n    const isLiked = card.likes.some(data => data._id === user._id);\n\n    return (\n        <div className=\"card\">\n            <img \n                src={card.link} \n                draggable=\"false\" \n                alt=\"card image\" \n                className=\"card__image\" \n                onClick={() => onCardClick(card)}\n            />\n            <div className=\"card__details\">\n                <h2 className=\"card__text\">{card.name}</h2>\n                <button \n                    className={`card__icon-heart ${isLiked && 'card__icon-heart_black animate'}`}\n                    type=\"button\" \n                    aria-label=\"heart-button\" \n                    title=\"like\"\n                    onClick={() => onCardLike('like',card)}\n                />\n                <span className=\"card__likes\">{card.likes.length}</span>\n            </div>\n            <button \n                className=\"card__icon-delete\" \n                type=\"button\" \n                aria-label=\"trash-button\" \n                title=\"delete\"\n                onClick={() => onCardDelete(card)}\n                hidden={!isOwner}\n            />\n        </div>\n    )\n}\n\nexport default Card","C:\\Users\\zoddo\\around-react\\src\\components\\Input.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":16,"column":21,"nodeType":"67","endLine":22,"endColumn":23},{"ruleId":"65","severity":1,"message":"66","line":7,"column":17,"nodeType":"67","endLine":13,"endColumn":19},{"ruleId":"68","severity":1,"message":"69","line":39,"column":7,"nodeType":"70","endLine":39,"endColumn":20,"suggestions":"71"},{"ruleId":"65","severity":1,"message":"66","line":14,"column":13,"nodeType":"67","endLine":20,"endColumn":15},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'inputs' and 'name'. Either include them or remove the dependency array.","ArrayExpression",["74"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [inputs, isOpen, name, user]",{"range":"77","text":"78"},[1079,1092],"[inputs, isOpen, name, user]"]